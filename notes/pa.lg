a = forall a: ~A(a) + B(a)
b = forall a :  ~B(a) + C(a)
apply_one = tactic a b
a = * a b
a = # b a a
:

a = forall a forall b: ~A(a b) + B(a b)
b = forall a forall b : ~B(a b) + C(a b)
apply_two = tactic a b
a = * a b
a = # c a a
a = # d b a
:

a = forall a forall b forall c: ~A(a b c) + B(a b c)
b = forall a forall b forall c: ~B(a b c) + C(a b c)
apply_three = tactic a b
a = * a b
a = # d a a
a = # e b a
a = # f c a
:
// define a convenience predicate
triple_terms = forall a forall b forall c : ~TripleTerms(a b c) + Term(a)*Term(b)*Term(c)
// define conversion
e2e = forall a forall b: ~Term(a) + ~Term(b) + ~E(a b) + E(b a)
i2i = forall a forall b : ~Term(a) + ~Term(b) + ~I(a b) + I(b a)
a2i = forall a forall b : ~Term(a) + ~Term(b) + ~A(a b) + O(b a)
// define the "perfect" deductions
Barbara = forall a forall b forall c : ~TripleTerms(a b c) + ~A(a b) + ~A(b c) + A(a c)
Celarent = forall a forall b forall c: ~TripleTerms(a b c) + ~E(a b) + ~A(b c) + E(a c)
Darii = forall a forall b forall c: ~TripleTerms(a b c) + ~A(a b) + ~I(b c) + I(a c)
Ferio = forall a forall b forall c: ~TripleTerms(a b c) + ~E(a b) + ~I(b c) + O(a c)
// prior analytics A5
second_figure = forall a forall b forall c: ~SecondFigureSyllog(a b c) + TripleTerms(a b c)*A(a b)*E(a c) + TripleTerms(a b c)*A(a b)*A(a c) + TripleTerms(a b c)*E(a b)*E(a c)
second_figure_definition = forall a forall b forall c: ~SecondFigureSyllog(a b c) + MiddleTerm(a)*ExtremeTerm(b)*ExtremeTerm(c)

prop1 = forall a forall b forall c: ~TripleTerms(a b c) + ~E(a b) + ~A(a c) + E(c b)

:prop1 prop1
:
s = given
triple_terms
s = apply s triple_terms a b c
s
s = apply s e2e a b
